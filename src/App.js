import AddNetwork from "adding-default-hardhat";
import { ethers } from "ethers";
import {useState} from 'react';

function App() {

 
//vanar contract abi
  const virtuaAbi =[{
      "inputs": [
        {
          "internalType": "address",
          "name": "_database",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_rewardPool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPool",
      "outputs": [
        {
          "internalType": "contract RewardPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_database",
          "type": "address"
        }
      ],
      "name": "setDatabase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_rewardPool",
          "type": "address"
        }
      ],
      "name": "setReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fees",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_benifactor",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingDatabase",
      "outputs": [
        {
          "internalType": "contract StakingDatabase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }];

const databasebytecode ='0x61010060405262093a80608090815262278d0060a05262ed4e0060c0526303c2670060e052620000339060049081620000e5565b503480156200004157600080fd5b5060405162001b7538038062001b75833981016040819052620000649162000154565b6200006f3362000095565b600280546001600160a01b0319166001600160a01b039290921691909117905562000186565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200012b579160200282015b828111156200012b578251829063ffffffff1690559160200191906001019062000106565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b6000602082840312156200016757600080fd5b81516001600160a01b03811681146200017f57600080fd5b9392505050565b6119df80620001966000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c8063026c4207146100d557806348dec2a7146100f157806366666aa914610130578063715018a61461015b5780637acb7757146101655780638381e1821461017857806387a5ba881461018b5780638da5cb5b1461019e5780638ff39099146101a6578063c1841e32146101b9578063c265eb8a146101ec578063cc3d967b146101ff578063d279c19114610223578063e5932c4014610236578063ee99205c14610249578063f2fde38b1461025c575b600080fd5b6100de60035481565b6040519081526020015b60405180910390f35b61011b6100ff36600461169d565b6005602052600090815260409020600381015460049091015482565b604080519283526020830191909152016100e8565b600254610143906001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b61016361026f565b005b6101636101733660046116c1565b6102b3565b6100de6101863660046116c1565b61051b565b6100de6101993660046116f1565b6109b3565b6101436109d4565b6101636101b436600461169d565b6109e3565b6101cc6101c736600461169d565b610a34565b6040805194855260208501939093529183015260608201526080016100e8565b61011b6101fa36600461170a565b610b4d565b61021261020d36600461169d565b610d6f565b6040516100e895949392919061177a565b6100de61023136600461169d565b610eb1565b61016361024436600461169d565b6111e0565b600154610143906001600160a01b031681565b61016361026a36600461169d565b611231565b336102786109d4565b6001600160a01b0316146102a75760405162461bcd60e51b815260040161029e906117c8565b60405180910390fd5b6102b160006112d1565b565b6001546001600160a01b031633146102dd5760405162461bcd60e51b815260040161029e906117fd565b60006003546000036102f0575081610402565b600160009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190611834565b600260009054906101000a90046001600160a01b03166001600160a01b031663750142e66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190611834565b6103e89190611863565b6003546103f59085611876565b6103ff9190611895565b90505b6001600160a01b0382166000908152600560205260408120600301805485929061042d908490611863565b90915550506001600160a01b03821660008181526005602090815260408220805460018181018355828552838520909101889055600282018054918201815584529183209091018490559181526004909101805483929061048f908490611863565b90915550506001600160a01b03821660009081526005602090815260408220600190810180549182018155835290822042910155600380548392906104d5908490611863565b90915550506040517f1b52f0db6b5f755caa8f232eebe353a340637e6c55969d84b3ee0cee945aa4339061050e908590849086906118b7565b60405180910390a1505050565b6001546000906001600160a01b031633146105485760405162461bcd60e51b815260040161029e906117fd565b6001600160a01b038216600090815260056020526040812060030154900361059d5760405162461bcd60e51b81526020600482015260086024820152674e6f205374616b6560c01b604482015260640161029e565b6001600160a01b0382166000908152600560205260409020600301548311156106085760405162461bcd60e51b815260206004820152601e60248201527f556e7374616b6520416d6f756e7420457863656564732042616c616e63650000604482015260640161029e565b60006106148484611321565b6001600160a01b0384166000908152600560205260408120549192509061063d906001906118d6565b90505b80620f423e146108df576001600160a01b0384166000908152600560205260408120600201805483908110610677576106776118e9565b906000526020600020015490508560056000876001600160a01b03166001600160a01b0316815260200190815260200160002060000183815481106106be576106be6118e9565b906000526020600020015411610792576001600160a01b03851660009081526005602052604090208054806106f5576106f56118ff565b6000828152602080822083016000199081018390559092019092556001600160a01b03871682526005905260409020600101805480610736576107366118ff565b6000828152602080822083016000199081018390559092019092556001600160a01b03871682526005905260409020600201805480610777576107776118ff565b600190038181906000526020600020016000905590556108bd565b6001600160a01b03851660009081526005602052604090208054879190849081106107bf576107bf6118e9565b9060005260206000200160008282546107d891906118d6565b90915550506001600160a01b0385166000908152600560205260409020805483908110610807576108076118e9565b90600052602060002001548660056000886001600160a01b03166001600160a01b03168152602001908152602001600020600201848154811061084c5761084c6118e9565b90600052602060002001546108619190611876565b61086b9190611895565b6001600160a01b0386166000908152600560205260409020600201805484908110610898576108986118e9565b9060005260206000200160008282546108b191906118d6565b90915550620f423f9250505b816000036108cc57620f423f91505b50806108d781611915565b915050610640565b506000806108ee858785610b4d565b6001600160a01b03871660009081526005602052604081206003018054939550919350889261091e9084906118d6565b90915550506001600160a01b0385166000908152600560205260408120600401805483929061094e9084906118d6565b92505081905550806003600082825461096791906118d6565b90915550506040517f56be67a54226e3a39c5d1a710d2afc912ca5df1d89054cfeb3e65b47509ee909906109a0908890849089906118b7565b60405180910390a1509150505b92915050565b600481815481106109c357600080fd5b600091825260209091200154905081565b6000546001600160a01b031690565b336109ec6109d4565b6001600160a01b031614610a125760405162461bcd60e51b815260040161029e906117c8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03808216600090815260056020908152604080832060038101546004918201546002548451633a80a17360e11b81529451969788978897889795969495939092169363750142e693808201939291908290030181865afa158015610aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac79190611834565b600160009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e9190611834565b92989197509550909350915050565b600080600354600003610b6557508290506000610d67565b6001600160a01b038516600090815260056020526040812060030154610b93670de0b6b3a764000087611876565b610b9d9190611895565b6001600160a01b038716600090815260056020526040902060040154909150670de0b6b3a764000090610bd1908390611876565b610bdb9190611895565b91506000600160009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c569190611834565b600260009054906101000a90046001600160a01b03166001600160a01b031663750142e66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccd9190611834565b610cd79190611863565b905084600354610ce79190611863565b81610cf28786611863565b610cfc9190611876565b610d069190611895565b9350610d366040518060400160405280600d81526020016c53686172652044657461696c7360981b8152506114a2565b6001600160a01b03871660009081526005602052604090206003810154600490910154610d649188916114e5565b50505b935093915050565b6001600160a01b038116600090815260056020908152604080832060038101546004820154825484518187028101870190955280855260609687968796919586959094600186019460028701949293919291879190830182828015610df357602002820191906000526020600020905b815481526020019060010190808311610ddf575b5050505050945083805480602002602001604051908101604052809291908181526020018280548015610e4557602002820191906000526020600020905b815481526020019060010190808311610e31575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610e9757602002820191906000526020600020905b815481526020019060010190808311610e83575b50989f979e50929c50939a50919850939650505050505050565b6001546000906001600160a01b03163314610ede5760405162461bcd60e51b815260040161029e906117fd565b6001600160a01b03821660009081526005602052604081206003015490610f058285611321565b9050600080610f15868585610b4d565b90925090506000610f2685846118d6565b905080600003610f6d5760405162461bcd60e51b81526020600482015260126024820152714e6f2072657761726420746f20636c61696d60701b604482015260640161029e565b6001600160a01b03871660009081526005602052604081206004018054849290610f989084906118d6565b925050819055508160036000828254610fb191906118d6565b92505081905550600085600160009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561100e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110329190611834565b0361103e575084611150565b6001546040805163567e98f960e01b8152905188926001600160a01b03169163567e98f99160048083019260209291908290030181865afa158015611087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ab9190611834565b6110b591906118d6565b60025460408051633a80a17360e11b8152905185926001600160a01b03169163750142e69160048083019260209291908290030181865afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111229190611834565b61112c91906118d6565b6111369190611863565b6003546111439088611876565b61114d9190611895565b90505b6001600160a01b0388166000908152600560205260408120600401805483929061117b908490611863565b9250508190555080600360008282546111949190611863565b90915550506040517fe630ca519fedafd2bd9bd35ad65e198e08398f47c88ca063c406740992bcd1a4906111cd9084908690859061192c565b60405180910390a1509695505050505050565b336111e96109d4565b6001600160a01b03161461120f5760405162461bcd60e51b815260040161029e906117c8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b3361123a6109d4565b6001600160a01b0316146112605760405162461bcd60e51b815260040161029e906117c8565b6001600160a01b0381166112c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029e565b6112ce816112d1565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080805b6001600160a01b03841660009081526005602052604090206002015481101561149a576001600160a01b0384166000908152600560205260408120600101805483908110611376576113766118e9565b90600052602060002001544261138c91906118d6565b9050600061139982611531565b90506113ae670de0b6b3a76400006064611876565b6001600160a01b03871660009081526005602052604090206002018054839190869081106113de576113de6118e9565b90600052602060002001546113f39190611876565b6113fd9190611895565b6114079085611863565b93506114376040518060400160405280600d81526020016c426f6f7374656420536861726560981b8152506114a2565b6114858482600560008a6001600160a01b03166001600160a01b031681526020019081526020016000206002018681548110611475576114756118e9565b90600052602060002001546114e5565b5050808061149290611942565b915050611326565b509392505050565b6112ce816040516024016114b6919061195b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611663565b61152c8383836040516024016114fd9392919061192c565b60408051601f198184030181529190526020810180516001600160e01b031663347b5e8f60e21b179052611663565b505050565b6000808080805b6004548110156116285760048181548110611555576115556118e9565b90600052602060002001548611156115a457611572816001611863565b61157d90600a611876565b935060048181548110611592576115926118e9565b90600052602060002001549250611616565b856115af84826118d6565b6115c1670de0b6b3a764000087611876565b6115cb9190611876565b6115d59190611895565b91506116026040518060400160405280600a815260200169426f6f73742043616c6360b01b8152506114a2565b61160d8487856114e5565b50949350505050565b8061162081611942565b915050611538565b508461163483826118d6565b611646670de0b6b3a764000086611876565b6116509190611876565b61165a9190611895565b95945050505050565b6112ce8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6001600160a01b03811681146112ce57600080fd5b6000602082840312156116af57600080fd5b81356116ba81611688565b9392505050565b600080604083850312156116d457600080fd5b8235915060208301356116e681611688565b809150509250929050565b60006020828403121561170357600080fd5b5035919050565b60008060006060848603121561171f57600080fd5b833561172a81611688565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b8381101561176f57815187529582019590820190600101611753565b509495945050505050565b60a08152600061178d60a083018861173f565b828103602084015261179f818861173f565b905082810360408401526117b3818761173f565b60608401959095525050608001529392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f4f6e6c79207374616b696e67436f6e74726163742063616e2063616c6c000000604082015260600190565b60006020828403121561184657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156109ad576109ad61184d565b60008160001904831182151516156118905761189061184d565b500290565b6000826118b257634e487b7160e01b600052601260045260246000fd5b500490565b92835260208301919091526001600160a01b0316604082015260600190565b818103818111156109ad576109ad61184d565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000816119245761192461184d565b506000190190565b9283526020830191909152604082015260600190565b6000600182016119545761195461184d565b5060010190565b600060208083528351808285015260005b818110156119885785810183015185820160400152820161196c565b506000604082860101526040601f19601f830116850101925050509291505056fea264697066735822122020927f5bb4ff3d0de91fe7e04e37f605cf84b195150df331960d6223b5f64a7d64736f6c63430008100033'
  const virtuaBytecode ="0x6080604052601460025534801561001557600080fd5b50604051610e85380380610e85833981016040819052610034916101a0565b61003d33610089565b6000805460ff60a01b19169055600380546001600160a01b038084166001600160a01b03199283161790925560048054928516929091169190911790556100826100d9565b50506101da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100ec600054600160a01b900460ff1690565b156101305760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640160405180910390fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861016b3390565b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038116811461019d57600080fd5b50565b600080604083850312156101b357600080fd5b82516101be81610188565b60208401519092506101cf81610188565b809150509250929050565b610c9c806101e96000396000f3fe6080604052600436106100b15760003560e01c806305d1c371146100bd57806326476204146100df5780632e17de78146100f2578063476343ee14610112578063567e98f91461013b5780635c975abb1461015157806366666aa914610176578063715018a6146101a357806382a547f8146101b85780638da5cb5b146101d8578063b88a802f146101ed578063e5932c4014610202578063f2fde38b14610222578063f54203741461024257600080fd5b366100b857005b600080fd5b3480156100c957600080fd5b506100dd6100d8366004610acf565b610262565b005b6100dd6100ed366004610afd565b61029f565b3480156100fe57600080fd5b506100dd61010d366004610acf565b61041b565b34801561011e57600080fd5b5061012860025481565b6040519081526020015b60405180910390f35b34801561014757600080fd5b5061012860015481565b34801561015d57600080fd5b50610166610687565b6040519015158152602001610132565b34801561018257600080fd5b50600354610196906001600160a01b031681565b6040516101329190610b21565b3480156101af57600080fd5b506100dd610697565b3480156101c457600080fd5b50600454610196906001600160a01b031681565b3480156101e457600080fd5b506101966106d2565b3480156101f957600080fd5b506100dd6106e1565b34801561020e57600080fd5b506100dd61021d366004610afd565b6108e4565b34801561022e57600080fd5b506100dd61023d366004610afd565b61098e565b34801561024e57600080fd5b506100dd61025d366004610afd565b610a2e565b3361026b6106d2565b6001600160a01b03161461029a5760405162461bcd60e51b815260040161029190610b35565b60405180910390fd5b600255565b6102a7610687565b156102c45760405162461bcd60e51b815260040161029190610b6a565b600034116103145760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742053686f756c642062652067726561746572207468616e2030006044820152606401610291565b6001600160a01b03811661035f5760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b2102132b734b330b1ba37b960711b6044820152606401610291565b60048054604051637acb775760e01b815234926001600160a01b0390921691637acb775791610392918591879101610b94565b600060405180830381600087803b1580156103ac57600080fd5b505af11580156103c0573d6000803e3d6000fd5b5050505080600160008282546103d69190610bc1565b90915550506040517f1b52f0db6b5f755caa8f232eebe353a340637e6c55969d84b3ee0cee945aa4339061040f90839042903390610bda565b60405180910390a15050565b610423610687565b156104405760405162461bcd60e51b815260040161029190610b6a565b6000811161047f5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f20556e7374616b6560a01b6044820152606401610291565b600480546040516341c0f0c160e11b815233926000926001600160a01b031691638381e182916104b3918791879101610b94565b6020604051808303816000875af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610bf9565b905060006105048483610c12565b905083600160008282546105189190610c12565b9091555050600354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b505050506000606483601461058c9190610c25565b6105969190610c44565b90506001600160a01b0384166105ac8285610c12565b604051600081818185875af1925050503d80600081146105e8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ed565b606091505b50506003546040516001600160a01b0390911691508290600081818185875af1925050503d806000811461063d576040519150601f19603f3d011682016040523d82523d6000602084013e610642565b606091505b5050507f7d3c803765ec6329bfc61627600c66b23d6663e88dfec119fd0457cd4b7e404383428660405161067893929190610bda565b60405180910390a15050505050565b600054600160a01b900460ff1690565b336106a06106d2565b6001600160a01b0316146106c65760405162461bcd60e51b815260040161029190610b35565b6106d06000610a7f565b565b6000546001600160a01b031690565b6106e9610687565b156107065760405162461bcd60e51b815260040161029190610b6a565b6004805460405163d279c19160e01b815233926000926001600160a01b03169163d279c1919161073891869101610b21565b6020604051808303816000875af1158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b9190610bf9565b600354604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b50505050600060648260146107eb9190610c25565b6107f59190610c44565b90506001600160a01b03831661080b8284610c12565b604051600081818185875af1925050503d8060008114610847576040519150601f19603f3d011682016040523d82523d6000602084013e61084c565b606091505b50506003546040516001600160a01b0390911691508290600081818185875af1925050503d806000811461089c576040519150601f19603f3d011682016040523d82523d6000602084013e6108a1565b606091505b5050507f37d2f91e40046979553b8bc9bf12a192e2216dc0a5d3a3e91a8d0ccac8f495e08242856040516108d793929190610bda565b60405180910390a1505050565b336108ed6106d2565b6001600160a01b0316146109135760405162461bcd60e51b815260040161029190610b35565b600380546001600160a01b0319166001600160a01b0383811691909117909155600480546040516303964cb160e61b815292169163e5932c409161095991859101610b21565b600060405180830381600087803b15801561097357600080fd5b505af1158015610987573d6000803e3d6000fd5b5050505050565b336109976106d2565b6001600160a01b0316146109bd5760405162461bcd60e51b815260040161029190610b35565b6001600160a01b038116610a225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610291565b610a2b81610a7f565b50565b33610a376106d2565b6001600160a01b031614610a5d5760405162461bcd60e51b815260040161029190610b35565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610ae157600080fd5b5035919050565b6001600160a01b0381168114610a2b57600080fd5b600060208284031215610b0f57600080fd5b8135610b1a81610ae8565b9392505050565b6001600160a01b0391909116815260200190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b9182526001600160a01b0316602082015260400190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610bd457610bd4610bab565b92915050565b92835260208301919091526001600160a01b0316604082015260600190565b600060208284031215610c0b57600080fd5b5051919050565b81810381811115610bd457610bd4610bab565b6000816000190483118215151615610c3f57610c3f610bab565b500290565b600082610c6157634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d1f33009c08101bc3f270f3eb777c8cfedb114202b20105d10d563cc48672f0864736f6c63430008100033";
const rewardBytecode ='0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104fd8061007e6000396000f3fe60806040526004361061006f5760003560e01c80632e1a7d4d146100cf578063715018a6146100f1578063750142e61461010657806382a547f81461012f5780638da5cb5b146101675780638ff390991461017c578063d7b4be241461019c578063f2fde38b146101bc57600080fd5b366100ca57600034116100c25760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590811195c1bdcda5d08105b5bdd5b9d60521b60448201526064015b60405180910390fd5b476003819055005b600080fd5b3480156100db57600080fd5b506100ef6100ea366004610449565b6101dc565b005b3480156100fd57600080fd5b506100ef6102be565b34801561011257600080fd5b5061011c60035481565b6040519081526020015b60405180910390f35b34801561013b57600080fd5b5060025461014f906001600160a01b031681565b6040516001600160a01b039091168152602001610126565b34801561017357600080fd5b5061014f6102f9565b34801561018857600080fd5b506100ef610197366004610462565b610308565b3480156101a857600080fd5b5060015461014f906001600160a01b031681565b3480156101c857600080fd5b506100ef6101d7366004610462565b610359565b336101e56102f9565b6001600160a01b03161461020b5760405162461bcd60e51b81526004016100b990610492565b6001546001600160a01b031633146102625760405162461bcd60e51b815260206004820152601a6024820152794f6e6c792064617461626173652063616e20776974686472617760301b60448201526064016100b9565b6001546040516001600160a01b03909116908290600081818185875af1925050503d80600081146102af576040519150601f19603f3d011682016040523d82523d6000602084013e6102b4565b606091505b5050476003555050565b336102c76102f9565b6001600160a01b0316146102ed5760405162461bcd60e51b81526004016100b990610492565b6102f760006103f9565b565b6000546001600160a01b031690565b336103116102f9565b6001600160a01b0316146103375760405162461bcd60e51b81526004016100b990610492565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b336103626102f9565b6001600160a01b0316146103885760405162461bcd60e51b81526004016100b990610492565b6001600160a01b0381166103ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100b9565b6103f6816103f9565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561045b57600080fd5b5035919050565b60006020828403121561047457600080fd5b81356001600160a01b038116811461048b57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220da2e18e33f00b847c07e0a5586e14139c254ad3f002b75eb17b205c2b1edc2db64736f6c63430008100033'
    const rewardPoolAbi =[
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "Deposit",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "Withdraw",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_staking",
            "type": "address"
          }
        ],
        "name": "setStaking",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakingAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakingDatabase",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ];

    const databaseAbi = [
      {
        "inputs": [
          {
            "internalType": "address payable",
            "name": "_rewardPool",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "reward",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "shareUS",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "newShare",
            "type": "uint256"
          }
        ],
        "name": "Claim",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "share",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "staker",
            "type": "address"
          }
        ],
        "name": "Staked",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "share",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "unstaker",
            "type": "address"
          }
        ],
        "name": "UnStaked",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "claimer",
            "type": "address"
          }
        ],
        "name": "claimReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "name": "getUserDetails",
        "outputs": [
          {
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "timestamps",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "userShares",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256",
            "name": "totalAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "poolShare",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "name": "getUserDetailsForReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "totalAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "poolShare",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalReward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalStaked",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "boostedShare",
            "type": "uint256"
          }
        ],
        "name": "getUserReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "poolShare",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "share2Us",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "rewardBoost",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "rewardPool",
        "outputs": [
          {
            "internalType": "contract RewardPool",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address payable",
            "name": "_rewardPool",
            "type": "address"
          }
        ],
        "name": "setReward",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address payable",
            "name": "_staking",
            "type": "address"
          }
        ],
        "name": "setStaking",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "benifector",
            "type": "address"
          }
        ],
        "name": "stake",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakingContract",
        "outputs": [
          {
            "internalType": "contract VirtuaStaking",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalShare",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "benifector",
            "type": "address"
          }
        ],
        "name": "unstake",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "userDetails",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "totalAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "poolShare",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ];

    async function requestAccount(){
      await window.ethereum.request(
        {
          method:'eth_requestAccounts'
        }
      )
    }
    const [address, setAddress] = useState("");
    const[amount, setAmount] = useState("")
    const [TransactionStatus, setTransactionStatus] = useState("")
    async function sendEth(toAddress,amount){
      console.log(typeof toAddress)
      //request to access metamask account
      try{
      
        if( typeof window.ethereum !=='undefined'){
          await requestAccount();
          const provider = new ethers.providers.Web3Provider(window.ethereum);
          const signer = provider.getSigner();
          const sendeth = await signer.sendTransaction(
            {
              to:toAddress,
              value:ethers.utils.parseEther(`${amount}`)
            }
            )
            const statusmsg =  `${amount} has been sent to ${toAddress}`
            setAddress("")
            setAmount("")
            await sendeth.wait();
            setTransactionStatus(statusmsg);
          }
        }catch(error){
        const errormsg = `Error in sending ${amount} due to ${error.message}`
        setTransactionStatus(errormsg)
          }
      
      }
      


  const VirtuaStakingAddress = '0xb4e9A5BC64DC07f890367F72941403EEd7faDCbB';
 const RewardPoolAddress = '0xDC57724Ea354ec925BaFfCA0cCf8A1248a8E5CF1';
 const StakingDatabaseAddress ='0xfc073209b7936A771F77F63D42019a3a93311869';

 const [showVirtuaAddress, setVirtuaAddress] = useState("");
 const [showRewardAddress, setRewardAddress] = useState("");
 const [showDatabaseAddress, setDatabaseAddress] = useState("");
 const privatekey='a0f58d4c34352d29fbdac7ef77ea7070a2d7bad79c1afea08fa408a7756d8435'
 async function  fetchContract(){

  try{

    if( typeof window.ethereum !== 'undefined' && window.ethereum.isConnected()){
      await requestAccount();
      let provider = new ethers.providers.Web3Provider(window.ethereum);
      const wallet = new ethers.Wallet(privatekey,provider);
      const RewardPoolInstance = new ethers.ContractFactory(rewardPoolAbi,rewardBytecode,wallet);
      const rewardContract = await RewardPoolInstance.deploy();
      await rewardContract.deployed();
      
      const StakingDatabaseInstance = new ethers.ContractFactory(databaseAbi,databasebytecode,wallet);
      const stakingdb = await StakingDatabaseInstance.deploy(rewardContract.address);
      await stakingdb.deployed();
      
      
      const VirtuaStakingInstance = new ethers.ContractFactory(virtuaAbi,virtuaBytecode,wallet);
       const virtuaContract = await VirtuaStakingInstance.deploy(stakingdb.address,rewardContract.address);
      await virtuaContract.deployed();
       console.log(virtuaContract.address);
       
      
      setVirtuaAddress(virtuaContract.address);
      setRewardAddress(rewardContract.address)  
      setDatabaseAddress(stakingdb.address)
    
    }
  }catch(error){
    console.error("Contracts are not deployed");
  }

}
 
  

  // Function to add the network when the button is clicked
  // const handleAddNetwork = async () => {
  //   try {
  //     // Call the AddNetwork component to add the network
  //     await AddNetwork({ selectedChainIndex: 0 , daystimestamp:10, addContract:sayHello()});
  //     // setNetworkStatus('Network added successfully.');
  //   } catch (error) {
  //     console.error('Error adding network:', error);
  //     // setNetworkStatus('Error adding network.');
  //   }
  // };

  return (
    <div>
      <h1>My React App</h1>
      <button onClick={()=>AddNetwork({ selectedChainIndex: 0 , daystimestamp:10, addContract:fetchContract()})}>Add Network</button>
<h3>Virtua Address: {showVirtuaAddress}</h3>
<h3>RewardPool Address: {showRewardAddress}</h3>
<h3>Database Address: {showDatabaseAddress}</h3>

{/* send eth to address */}
<div>
      {/*for address  */}
<input onChange={(e)=>setAddress(e.target.value)}
 placeholder="Enter address"
 value={address}
 />
</div>
      {/* for amount */}
<input
onChange={(e)=>setAmount(e.target.value)}
placeholder="Enter amount of hardhat to send"
value={amount}
/>
<button onClick={()=> sendEth(address,amount)}>Send eth</button>
    </div>

  );
}

export default App;
